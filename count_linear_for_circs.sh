#!/bin/bash

####
# T.J.BlÃ¤tte
# S. Lux
# 2018
####
#
# Calculate the ratio of reads supporting each circular
#       RNA / backsplice junction over reads supporting
#       an alternative linear junction. Alternative
#       linear junctions are those in which either the
#       backsplice junction donor or acceptor takes part.
#       Requires BEDTools.
#
# Args:
#   CIRCS: Circular RNAs / backsplice junctions for which
#       linear alternatives are to be quantified, file
#       generated by get_circs.sh: *_circsAnnotatedFinal.txt.
#   BAM: Matching BAM file generated by STAR on the basis of
#       which circRNAs were first identified.
#   GENOME: Genome file of the reference used by STAR, defaults to
#       /NGS/refgenome/GATK/starIndexFixedGTF/chrNameLength.txt.
#
# Output:
#   $COUNTS: TSV file containing for each circular RNA / backsplice
#       junction the number of circular and linear supporting reads.
#       Linear reads are provided for the backsplice donor and acceptor,
#       as well as the min, max and mean of the two.
#   $UNIFROM: TSV file analogous to regular read count file to input
#       into DESeq2 but containing circular to linear read count
#       ratios instead of counts. Out of all of the different ratios
#       in $COUNTS, it is the arithmetic mean of alternative linear
#       junctions involving the backsplice donor and acceptor which is
#       used
#
####


CIRCS=$1 # should be *.out.junction_circsAnnotatedFinal.txt
BAM=$2 # should be matching BAM file on the basis of which CIRCS was generated
GENOME=${3:"/NGS/refgenome/GATK/starIndexFixedGTF/chrNameLength.txt"}

BED="${CIRCS%.txt}_linearJunctions.bed"
COUNTS="${BED%.bed}Counts.tsv"
TMP="${BED%.bed}Counts.bed"
UNIFORM="${COUNTS%.tsv}_RATIOuniformIDs.tsv"

tail -n +2 "$CIRCS" | cut -f1-4,8 | uniq | awk -v OFS='\t' '{print $1,$2-15,$2+15,$4,$5,NR,"\n"$1,$3-15,$3+15,$4,$5,NR}' > $BED
/NGS/links/bedtools/bedtools intersect -b "$BAM" -a <(/NGS/links/bedtools/sortBed -i "$BED" -faidx "$GENOME")  -c -bed -f 1.0 -sorted -g "$GENOME" | sort -k6n > $TMP


echo -e '#chr\tStart\tEnd\tgeneSymbol\tsupportingReads_circularJunction\tsupportingReads_linearJunction_start\tsupportingReads_linearJunction_end\tsupportingReads_linearJunction_min\tsupportingReads_linearJunction_max\tsupportingReads_linearJunction_mean\tsupportingReads_linearJunction_total\tsupportingReads_linearJunction_mean-div-by-supportingReads_circularJunction' > $COUNTS
paste <(sed -n '1~2p' "$TMP" | cut -f1,2,4,5,7) <(sed -n '2~2p' "$TMP" | cut -f2,7) | awk -v OFS='\t' '{$2=$2+15; $6=$6+15; print $1,$2,$6,$4,$3,$5,$7}' | awk -v OFS='\t' ' {if($6<=$7){MIN=$6; MAX=$7}else{MIN=$7; MAX=$6}; MEAN=($6+$7)/2; SUM=$6+$7; print $1,$2,$3,$4,$5,$6,$7,MIN,MAX,MEAN,SUM,MEAN/$5}' >> $COUNTS

# prepare counts file for DESeq2
# -> instead of read counts, this file contains the circular to linear read ratio in column 2
# -> column 1 contains a unique feature ID for each backsplice junction, based on chromosomal coordinates
paste <(cut -f 1-3 $COUNTS | sed 's/\t/_/g' ) <(cut -f12 $COUNTS) > $UNIFORM

rm -fr $TMP
rm -fr $BED
